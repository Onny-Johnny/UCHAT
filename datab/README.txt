----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

Компилить надо в корневой папке программы
Компилить вот так "clang -std=c11 -Wall -Wextra -Werror -Wpedantic lib/cjson/cJSON.c lib/cjson/cJSON.h lib/sqlite3/sqlite3.c lib/sqlite3/sqlite3.h inc/dich.h src/dich.c"

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

Проверялка того что я написал

Как включить прогу?
Есть несколько фунций

Добавить юзера в базу данных 
(тут нечего обьяснять)
- ./a.out 11 ЛОГИН ПАРОЛЬ

Добавить сообщение в базу данных 
(тут нечего обьяснять)
- ./a.out 12 ЮЗЕР_ЛОГИН СООБЩЕНИЕ

Изменить данные ТАБЛИЦЫ в базе данных 
(по типу - ОБНОВИТЬ таблица УСТАНОВИТЬ столбец = string ГДЕ столбец = string) 
- ./a.out 21 ТАБЛИЦА СТОЛБЕЦ ДАННЫЕ СТОЛБЕЦ ДАННЫЕ

Изменить данные ТАБЛИЦЫ в базе данных 
(по типу - ОБНОВИТЬ таблица УСТАНОВИТЬ столбец = string ГДЕ столбец = int) 
- ./a.out 22 ТАБЛИЦА СТОЛБЕЦ ДАННЫЕ СТОЛБЕЦ ДАННЫЕ

Изменить данные ТАБЛИЦЫ в базе данных 
(по типу - ОБНОВИТЬ таблица УСТАНОВИТЬ столбец = int ГДЕ столбец = string) 
- ./a.out 23 ТАБЛИЦА СТОЛБЕЦ ДАННЫЕ СТОЛБЕЦ ДАННЫЕ

Изменить данные ТАБЛИЦЫ в базе данных 
(по типу - ОБНОВИТЬ таблица УСТАНОВИТЬ столбец = int ГДЕ столбец = int) 
- ./a.out 24 ТАБЛИЦА СТОЛБЕЦ ДАННЫЕ СТОЛБЕЦ ДАННЫЕ

Удалить элемент ТАБЛИЦЫ в базе данных 
(по типу - УДАЛИТЬ таблица ГДЕ столбец = string (не боись, оно удалит элемент из таблицы, а не саму таблицу)) 
- ./a.out 31 ТАБЛИЦА СТОЛБЕЦ ДАННЫЕ

Удалить элемент ТАБЛИЦЫ в базе данных 
(по типу - УДАЛИТЬ таблица ГДЕ столбец = int (не боись, оно удалит элемент из таблицы, а не саму таблицу)) 
- ./a.out 32 ТАБЛИЦА СТОЛБЕЦ ДАННЫЕ

Вывод в консоль данные всех столбцов из таблицы в базе данных 
(по типу - НАЙТИ все ИЗ таблица (пример ./a.out 4 users)) 
- ./a.out 4 ТАБЛИЦА

Вывод в консоль данных столбца из таблица в базе данных 
(по типу - НАЙТИ столбец ИЗ таблица (пример ./a.out 4 login users))
- ./a.out 41 СТОЛБЕЦ ТАБЛИЦА

Вывод в консоль JSON таблицы 
(это просто функция которая создает, заполняет и выводит JSON таблицу)
- ./a.out 9

Делалка из sql в json 
(функция работает по типу 4(читать выше), только выводит уже данные в виде json таблицы)
- ./a.out 8 ТАБЛИЦА

Вывод в консоль JSON таблицы 
(функция работает по типу 41(читать выше), только выводит уже данные в виде json таблицы)
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ функция создает json таблицу по старой формировке(которая в функции cJSON_Dresnia)
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ и изза этого больше сойдет как пример а не полностью готовая к копипасту функция
- ./a.out 81 СТОЛБЕЦ ТАБЛИЦА

Добавление данных из таблицы json в базу данных sql 
(добавляет в бд в таблицу users, заранее созданную(в функции) и переданую в функцию таблицу json)
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ функция работает по старой формировке json таблицы(которая в функции cJSON_Dresnia)
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ и изза этого больше сойдет как пример а не полностью готовая к копипасту функция
- ./a.out 82

Регистрация юзера
(функция разделывает json таблицу, ищет совпадения login в бд и отправляет отказ клиенту если есть совпадение, а если нет - отправляет подтверждение и добавляет данные из таблицы в бд)
- ./a.out 71

Логин юзера
(функция разделывает json таблицу, ищет совпадения login в бд и отправляет подтверждение клиенту если есть совпадение, а если нет - отправляет отказ)
- ./a.out 72

Добавить json таблицу message в базу данных
(функция json таблицу message превращает в структуру message и сохраняет в базу данных)
- ./a.out 61

Отправка клиенту пачку сообщений
(функция берет из базы данных сообщения добавленные за последнюю неделю и отправляет клиенту в виде таблицы json)
- ./a.out 62



Если введешь данные не по инструкии, то оно работать не будет.

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
Шо есть, шо нет

OPEN DATABASE - yes
CREATE TABLE - yes
INSERT INTO - yes
SELECT FROM - yes
UPDATE - yes
DELETE - yes

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

sql to json - yes
json to sql - yes

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

registration - yes
login - yes

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

save message - yes
send messages to client - yes

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------


CREATE USER STRUCTURE - yes
CREATE MESSAGE STRUCTURE - nope
CREATE ROOM STRUCTURE - nope


----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

⠄⠄⠄⣾⣿⠿⠿⠶⠿⢿⣿⣿⣿⣿⣦⣤⣄⢀⡅⢠⣾⣛⡉⠄⠄⠄⠸⢀⣿⠄
⠄⠄⢀⡋⣡⣴⣶⣶⡀⠄⠄⠙⢿⣿⣿⣿⣿⣿⣴⣿⣿⣿⢃⣤⣄⣀⣥⣿⣿⠄
⠄⠄⢸⣇⠻⣿⣿⣿⣧⣀⢀⣠⡌⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⣿⣿⣿⠄
⠄⢀⢸⣿⣷⣤⣤⣤⣬⣙⣛⢿⣿⣿⣿⣿⣿⣿⡿⣿⣿⡍⠄⠄⢀⣤⣄⠉⠋⣰
⠄⣼⣖⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⢇⣿⣿⡷⠶⠶⢿⣿⣿⠇⢀⣤
⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣷⣶⣥⣴⣿⡗
⢀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠄
⢸⣿⣦⣌⣛⣻⣿⣿⣧⠙⠛⠛⡭⠅⠒⠦⠭⣭⡻⣿⣿⣿⣿⣿⣿⣿⣿⡿⠃⠄
⠘⣿⣿⣿⣿⣿⣿⣿⣿⡆⠄⠄⠄⠄⠄⠄⠄⠄⠹⠈⢋⣽⣿⣿⣿⣿⣵⣾⠃⠄
⠄⠘⣿⣿⣿⣿⣿⣿⣿⣿⠄⣴⣿⣶⣄⠄⣴⣶⠄⢀⣾⣿⣿⣿⣿⣿⣿⠃⠄⠄
⠄⠄⠈⠻⣿⣿⣿⣿⣿⣿⡄⢻⣿⣿⣿⠄⣿⣿⡀⣾⣿⣿⣿⣿⣛⠛⠁⠄⠄⠄
⠄⠄⠄⠄⠈⠛⢿⣿⣿⣿⠁⠞⢿⣿⣿⡄⢿⣿⡇⣸⣿⣿⠿⠛⠁⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠉⠻⣿⣿⣾⣦⡙⠻⣷⣾⣿⠃⠿⠋⠁⠄⠄⠄⠄⠄⢀⣠⣴
⣿⣿⣿⣶⣶⣮⣥⣒⠲⢮⣝⡿⣿⣿⡆⣿⡿⠃⠄⠄⠄⠄⠄⠄⠄⣠⣴⣿⣿⣿
